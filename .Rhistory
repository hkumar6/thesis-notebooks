q()
n = 6
??choose
?choose
choose(6,2)
k = [0:n]
k <- seq(0,n)
choose(n,k)
coeff <- choose(n,k)
pi
l <- seq()
?seq
l <- seq(from=-pi, to=pi, by=0.1)
exp(-i)
cos(k)
cos(k*2)
cos(k*2) * k
cos(k*2) . k
cos(k*2) * k
cos(k) * k
sum (cos(k) * k)
valAtLambda <- function (l)  sum( cos(l*k) * coeff )^2 + sum( sin(l*k) * coeff )^2
valAtLambda(l)
valAtLambda(l(0))
valAtLambda(l(1))
l
l[1]
valAtLambda(l[1])
mapply(valAtLambda, l)
l
plot(l, mapply(valAtLambda, l))
n = 2
coeff <- choose(n, seq(0,n))
n = 2
n = 2
k <- seq(0,n)
coeff <- choose(n,k)
l <- seq(from=-pi, to=pi, by=0.1)
valAtLambda <- function (l)  sum( cos(l*k) * coeff )^2 + sum( sin(l*k) * coeff )^2
plot(l, mapply(valAtLambda, l))
n = 6
k <- seq(0,n)
coeff <- choose(n,k)
l <- seq(from=-pi, to=pi, by=0.1)
valAtLambda <- function (l)  sum( cos(l*k) * coeff )^2 + sum( sin(l*k) * coeff )^2
plot(l, mapply(valAtLambda, l))
n = 5
k <- seq(0,n)
coeff <- choose(n,k)
l <- seq(from=-pi, to=pi, by=0.1)
valAtLambda <- function (l)  sum( cos(l*k) * coeff )^2 + sum( sin(l*k) * coeff )^2
plot(l, mapply(valAtLambda, l))
n = 4
k <- seq(0,n)
coeff <- choose(n,k)
l <- seq(from=-pi, to=pi, by=0.1)
valAtLambda <- function (l)  sum( cos(l*k) * coeff )^2 + sum( sin(l*k) * coeff )^2
plot(l, mapply(valAtLambda, l))
n = 2
k <- seq(0,n)
coeff <- choose(n,k)
l <- seq(from=-pi, to=pi, by=0.1)
valAtLambda <- function (l)  sum( cos(l*k) * coeff )^2 + sum( sin(l*k) * coeff )^2
plot(l, mapply(valAtLambda, l))
n = 1
k <- seq(0,n)
coeff <- choose(n,k)
l <- seq(from=-pi, to=pi, by=0.1)
valAtLambda <- function (l)  sum( cos(l*k) * coeff )^2 + sum( sin(l*k) * coeff )^2
plot(l, mapply(valAtLambda, l))
n = 1
k <- seq(0,n)
coeff <- choose(n,k)
l <- seq(from=-pi, to=pi, by=0.1)
valAtLambda <- function (l)  sum( (-1)^k * cos(l*k) * coeff )^2 + sum( (-1)^k * sin(l*k) * coeff )^2
plot(l, mapply(valAtLambda, l))
n = 2
k <- seq(0,n)
coeff <- choose(n,k)
l <- seq(from=-pi, to=pi, by=0.1)
valAtLambda <- function (l)  sum( (-1)^k * cos(l*k) * coeff )^2 + sum( (-1)^k * sin(l*k) * coeff )^2
plot(l, mapply(valAtLambda, l))
n = 6
k <- seq(0,n)
coeff <- choose(n,k)
l <- seq(from=-pi, to=pi, by=0.1)
valAtLambda <- function (l)  sum( (-1)^k * cos(l*k) * coeff )^2 + sum( (-1)^k * sin(l*k) * coeff )^2
plot(l, mapply(valAtLambda, l))
n = 1
k <- seq(0,n)
coeff <- choose(n,k)
l <- seq(from=-pi, to=pi, by=0.1)
valAtLambda <- function (l)  sum( (-1)^k * cos(l*k) * coeff )^2 + sum( (-1)^k * sin(l*k) * coeff )^2
plot(l, mapply(valAtLambda, l))
mapply(valAtLambda, l)
n = 1
k <- seq(0,n)
coeff <- choose(n,k)
l <- seq(from=-pi, to=pi, by=0.1)
valAtLambda <- function (l)  sum( (-1)^k * cos(l*k) * coeff )^2 + sum( (-1)^k * sin(l*k) * coeff )^2
plot(l, mapply(valAtLambda, l))
(-1)*k
(-1)^0
(-1)^k
cos(l*k)
n = 1
k <- seq(0,n)
coeff <- choose(n,k)
l <- seq(from=-pi, to=pi, by=0.1)
valAtLambda <- function (l)  sum( (-1)^k * cos(l*k) * coeff )^2 + sum( (-1)^k * sin(l*k) * coeff )^2
plot(l, mapply(valAtLambda, l))
cos(l*k)
lambda
n = 1
k <- seq(0,n)
coeff <- choose(n,k)
l <- seq(from=-pi, to=pi, by=0.1)
valAtLambda <- function (lambda)  sum( (-1)^k * cos(lambda*k) * coeff )^2 + sum( (-1)^k * sin(lambda*k) * coeff )^2
plot(l, mapply(valAtLambda, l))
(-1)^k
cos(l[1]*k)
coeff
(-1)^k * cos(l[1]*k) * coeff
n = 2
k <- seq(0,n)
coeff <- choose(n,k)
l <- seq(from=-pi, to=pi, by=0.1)
valAtLambda <- function (lambda)  sum( (-1)^k * cos(lambda*k) * coeff )^2 + sum( (-1)^k * sin(lambda*k) * coeff )^2
plot(l, mapply(valAtLambda, l))
n = 3
k <- seq(0,n)
coeff <- choose(n,k)
l <- seq(from=-pi, to=pi, by=0.1)
valAtLambda <- function (lambda)  sum( (-1)^k * cos(lambda*k) * coeff )^2 + sum( (-1)^k * sin(lambda*k) * coeff )^2
plot(l, mapply(valAtLambda, l))
n = 4
k <- seq(0,n)
coeff <- choose(n,k)
l <- seq(from=-pi, to=pi, by=0.1)
valAtLambda <- function (lambda)  sum( (-1)^k * cos(lambda*k) * coeff )^2 + sum( (-1)^k * sin(lambda*k) * coeff )^2
plot(l, mapply(valAtLambda, l))
n = 5
k <- seq(0,n)
coeff <- choose(n,k)
l <- seq(from=-pi, to=pi, by=0.1)
valAtLambda <- function (lambda)  sum( (-1)^k * cos(lambda*k) * coeff )^2 + sum( (-1)^k * sin(lambda*k) * coeff )^2
plot(l, mapply(valAtLambda, l))
n = 6
k <- seq(0,n)
coeff <- choose(n,k)
l <- seq(from=-pi, to=pi, by=0.1)
valAtLambda <- function (lambda)  sum( (-1)^k * cos(lambda*k) * coeff )^2 + sum( (-1)^k * sin(lambda*k) * coeff )^2
plot(l, mapply(valAtLambda, l))
1616.8 - (1328.6*1.38 - 734.2*0.68)
microbenchmark::microbenchmark(kummerM2::kummerM2(seq(-200, -190, length.out = 15), 1, 2, 1), fAsianOptions2::kummerM(seq(-200, -190, length.out = 15), 1, 2, 1))
microbenchmark::microbenchmark(kummerM2::kummerM2(seq(-200, -190, length.out = 15), 1, 2, 1), fAsianOptions2::kummerM(seq(-200, -190, length.out = 15), 1, 2, 1))
?microbenchmark::microbenchmark
microbenchmark::microbenchmark(kummerM2::kummerM2(seq(-200, -190, length.out = 15), 1, 2, 1), fAsianOptions2::kummerM(seq(-200, -190, length.out = 15), 1, 2, 1))
microbenchmark::microbenchmark(kummerM2::kummerM2(seq(-200, -190, length.out = 15), 1, 2, 1), fAsianOptions2::kummerM(seq(-200, -190, length.out = 15), 1, 2, 1), times = 1000)
x <- seq(-200, -190, length.out = 15)
microbenchmark::microbenchmark(kummerM2::kummerM2(x, 1, 2, 1), fAsianOptions2::kummerM(x, 1, 2, 1), times = 1000)
39.18211-12.76475
library("mpb2")
dmpb(seq(-2:0), 5, 3, 20)
dmpb(-2, 5, 3, 20)
library("mpb2")
dmpb(-2, 5, 3, 20)
dmpb(-1, 5, 3, 20)
dmpb(-0, 5, 3, 20)
library("mpb2")
dmpb(-0, 5, 3, 20)
dmpb(-1, 5, 3, 20)
dmpb(-1, 5, 3, 20)
q()
install.packages("urca")
library(urca)
data("npext")
npext$unemploy
getwd()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
LAozone <- read_csv("~/Sem3/Applied Regression/HP1/Data sets-20171025/LAozone.csv")
#summary(LAozone, ozone=330,    vh=330,  wind=330, humidity=330,  temp=330,   ibh=330,   dpg=330,   ibt=330,   vis=330)
summary(LAozone[2:10])
LAozone_long=LAozone
LAozone_long<-gather(LAozone[2:10], key = variable, value = value)
head(LAozone)
head(LAozone_long)
ggplot(data = LAozone_long, mapping = aes(y=value, x=variable )) +
geom_boxplot(aes(fill=variable))
ggplot(data = LAozone_long, mapping = aes(y=value, x=variable ), show.legend = FALSE ) +
geom_boxplot(aes(fill=variable), show.legend = FALSE) + facet_wrap(~variable, nrow = 3)
ggplot(LAozone_long, aes(x=variable, y=value)) + geom_histogram(stat="identity")
LAozone_long=LAozone
LAozone_long=scale(as_tibble(LAozone))
LAozone_long<-gather(LAozone[2:10], key = variable, value = value)
ggplot(data = LAozone_long, mapping = aes(y=value, x=variable )) +
geom_boxplot(aes(fill=variable))
ggplot(data = LAozone_long, mapping = aes(y=value, x=variable ), show.legend = FALSE ) +
geom_boxplot(aes(fill=variable), show.legend = FALSE) + facet_wrap(~variable, nrow = 3)
ggplot(data = LAozone_long) +
geom_point(mapping = aes(x=variable, y=value))+ facet_wrap(~variable, nrow = 3)
LAozone %>% as_tibble() %>% mutate(
season = if_else(doy %in% 92:273, "April to September", "October to March"),doy = NULL)
LAozone=select(LAozone, -doy)
LAozone
ggplot(data =LAozone ) +
geom_point(mapping = aes(x = ozone, y = dpg, shape = season))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
LAozone <- read_csv("~/Sem3/Applied Regression/HP1/Data sets-20171025/LAozone.csv")
#summary(LAozone, ozone=330,    vh=330,  wind=330, humidity=330,  temp=330,   ibh=330,   dpg=330,   ibt=330,   vis=330)
summary(LAozone[2:10])
LAozone_long=LAozone
LAozone_long<-gather(LAozone[2:10], key = variable, value = value)
head(LAozone)
head(LAozone_long)
ggplot(data = LAozone_long, mapping = aes(y=value, x=variable )) +
geom_boxplot(aes(fill=variable))
ggplot(data = LAozone_long, mapping = aes(y=value, x=variable ), show.legend = FALSE ) +
geom_boxplot(aes(fill=variable), show.legend = FALSE) + facet_wrap(~variable, nrow = 3)
ggplot(LAozone_long, aes(x=variable, y=value)) + geom_histogram(stat="identity")
LAozone_long=LAozone
LAozone_long=scale(as_tibble(LAozone))
LAozone_long<-gather(LAozone[2:10], key = variable, value = value)
ggplot(data = LAozone_long, mapping = aes(y=value, x=variable )) +
geom_boxplot(aes(fill=variable))
ggplot(data = LAozone_long, mapping = aes(y=value, x=variable ), show.legend = FALSE ) +
geom_boxplot(aes(fill=variable), show.legend = FALSE) + facet_wrap(~variable, nrow = 3)
ggplot(data = LAozone_long) +
geom_point(mapping = aes(x=variable, y=value))+ facet_wrap(~variable, nrow = 3)
LAozone_season=LAozone %>% as_tibble() %>% mutate(
season = if_else(doy %in% 92:273, "April to September", "October to March"),doy = NULL)
LAozone=select(LAozone, -doy)
LAozone
ggplot(data =LAozone_season ) +
geom_point(mapping = aes(x = ozone, y = dpg, color=season, shape=season))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
LAozone <- read_csv("~/Sem3/Applied Regression/HP1/Data sets-20171025/LAozone.csv")
LAozone
#summary(LAozone, ozone=330,    vh=330,  wind=330, humidity=330,  temp=330,   ibh=330,   dpg=330,   ibt=330,   vis=330)
summary(LAozone[2:11])
LAozone_long=LAozone
LAozone_long<-gather(LAozone[2:11], key = variable, value = value)
#head(LAozone)
head(LAozone_long)
LAozone_long
ggplot(data = LAozone_long, mapping = aes(y=value, x=variable )) +
geom_boxplot(aes(fill=variable))
ggplot(LAozone_long, aes(x=value, binwidth=1000,scale="free")) +
geom_histogram() +facet_wrap(~variable)
LAozone_long=LAozone
LAozone_long=as_tibble(scale((LAozone)))
##LAozone_long<-gather(LAozone_long[2:10], key = variable, value = value)
LAozone_long<-gather(LAozone_long[2:11], key = variable, value = value)
ggplot(data = LAozone_long, mapping = aes(y=value, x=variable )) +
geom_boxplot(aes(fill=variable))
ggplot(data = LAozone_long, mapping = aes(y=value, x=variable ), show.legend = FALSE ) +
geom_boxplot(aes(fill=variable), show.legend = FALSE)
ggplot(data = LAozone_long) +
geom_point(mapping = aes(x=LAozone[1], y=value))+ facet_wrap(~variable, nrow = 3,scale="free")
LAozone_season=LAozone %>% as_tibble() %>% mutate(
season = if_else(doy %in% 92:273, "April to September", "October to March"),doy = NULL)
LAozone=select(LAozone, -doy)
LAozone
ggplot(data =LAozone_season ) +
geom_point(mapping = aes(x = ozone, y = dpg, color=season, shape=season))
ggplot(LAozone_long, aes(x=value,scale="free")) +
geom_histogram(binwidth = 10) +facet_wrap(~variable)
LAozone_long=LAozone
LAozone_long=as_tibble(scale((LAozone)))
##LAozone_long<-gather(LAozone_long[2:10], key = variable, value = value)
LAozone_long<-gather(LAozone, key = variable, value = value, -ozone)
ggplot(data = LAozone_long, mapping = aes(y=value, x=variable )) +
geom_boxplot(aes(fill=variable))
ggplot(data = LAozone_long, mapping = aes(y=value, x=variable ), show.legend = FALSE ) +
geom_boxplot(aes(fill=variable), show.legend = FALSE)
ggplot(data = LAozone_long) +
geom_point(mapping = aes(x=LAozone[1], y=value))+ facet_wrap(~variable, nrow = 3,scale="free")
LAozone_season=LAozone %>% as_tibble() %>% mutate(
season = if_else(doy %in% 92:273, "April to September", "October to March"),doy = NULL)
head(LAozone)
LAozone_season=LAozone %>% as_tibble() %>% mutate(
season = if_else(doy %in% 92:273, "April to September", "October to March"),doy = NULL)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
LAozone <- read_csv("~/Sem3/Applied Regression/HP1/Data sets-20171025/LAozone.csv")
LAozone
#summary(LAozone, ozone=330,    vh=330,  wind=330, humidity=330,  temp=330,   ibh=330,   dpg=330,   ibt=330,   vis=330)
summary(LAozone[2:11])
LAozone_long=LAozone
LAozone_long<-gather(LAozone[2:11], key = variable, value = value)
#head(LAozone)
head(LAozone_long)
LAozone_long
ggplot(data = LAozone_long, mapping = aes(y=value, x=variable )) +
geom_boxplot(aes(fill=variable))
ggplot(LAozone_long, aes(x=value,scale="free")) +
geom_histogram(binwidth = 10) +facet_wrap(~variable)
LAozone_long=LAozone
LAozone_long=as_tibble(scale((LAozone)))
##LAozone_long<-gather(LAozone_long[2:10], key = variable, value = value)
LAozone_long<-gather(LAozone, key = variable, value = value, -ozone)
ggplot(data = LAozone_long, mapping = aes(y=value, x=variable )) +
geom_boxplot(aes(fill=variable))
ggplot(data = LAozone_long, mapping = aes(y=value, x=variable ), show.legend = FALSE ) +
geom_boxplot(aes(fill=variable), show.legend = FALSE)
ggplot(data = LAozone_long) +
geom_point(mapping = aes(x=LAozone[1], y=value))+ facet_wrap(~variable, nrow = 3,scale="free")
load("~/Code/lisa/package_comparison/simData.Rda")
gamma
x <- 1:10
par(mfrow=c(2,1))
plot(x, sin(x))
plot(x, cos(x))
x <- 1:10
par(mfrow=c(1,2))
plot(x, sin(x), col = "blue")
plot(x, cos(x), col = "red")
x <- 1:10
par(mfrow=c(1,2),xpd=NA)
plot(x, sin(x), col = "blue")
plot(x, cos(x), col = "red")
?legend
x <- 1:10
par(mfrow=c(1,2),xpd=NA)
plot(x, sin(x), col = "blue")
plot(x, cos(x), col = "red")
legend("bottom", ncol=2, c("sin", "cos"), lty = c(1,1))
x <- 1:10
par(mfrow=c(1,2),xpd=NA,oma=c(5,0,0,0))
plot(x, sin(x), col = "blue")
plot(x, cos(x), col = "red")
legend("bottom", ncol=2, c("sin", "cos"), lty = c(1,1))
x <- 1:10
par(mfrow=c(1,2),xpd=NA,oma=c(5,0,0,0))
plot(x, sin(x), col = "blue", type = "l")
plot(x, cos(x), col = "red", type = "l")
legend("bottom", ncol=2, c("sin", "cos"), lty = c(1,1), fill = c("blue", "red"))
x <- 1:10
par(mfrow=c(1,2),xpd=NA,oma=c(5,0,0,0))
plot(x, sin(x), col = "blue", type = "l")
plot(x, cos(x), col = "red", type = "l")
legend("bottom", ncol=2, legend = c("sin", "cos"), lty = c(1,1), col = c("blue", "red"))
x <- 1:10
par(mfrow=c(1,2),xpd=NA,oma=c(5,0,0,0))
plot(x, sin(x), col = "blue", type = "l")
plot(x, cos(x), col = "red", type = "l")
legend("topright", ncol=2, legend = c("sin", "cos"), lty = c(1,1), col = c("blue", "red"))
x <- 1:10
par(mfrow=c(1,2),xpd=NA,oma=c(5,0,0,0))
plot(x, sin(x), col = "blue", type = "l")
plot(x, cos(x), col = "red", type = "l")
legend(-0.5, 3.5, ncol=2, legend = c("sin", "cos"), lty = c(1,1), col = c("blue", "red"))
x <- 1:10
par(mfrow=c(1,2),xpd=NA,oma=c(5,0,0,0))
plot(x, sin(x), col = "blue", type = "l")
plot(x, cos(x), col = "red", type = "l")
legend(0.5, 3.5, ncol=2, legend = c("sin", "cos"), lty = c(1,1), col = c("blue", "red"))
x <- 1:10
par(mfrow=c(1,2),xpd=NA,oma=c(5,0,0,0))
plot(x, sin(x), col = "blue", type = "l")
plot(x, cos(x), col = "red", type = "l")
legend(1.5, 3.5, ncol=2, legend = c("sin", "cos"), lty = c(1,1), col = c("blue", "red"))
layout(matrix(c(1,2,3,3), ncol=2, byrow=TRUE), heights=c(4, 1))
par(mai=rep(0.5, 4))
plot(1:3,4:6,main="plot 1")
plot(1:3,4:6,main="plot 2")
par(mai=c(0,0,0,0))
plot.new()
legend(x="center", ncol=3,legend=c("0-1 km","1-5 km","outside barrier"),
fill=c("green","orange","red"), title="Fetch")
?optim
reticulate::source_python('~/thesis/thesis-notebooks/4nodes.py')
setwd("~/thesis/thesis-notebooks")
reticulate::source_python('~/thesis/thesis-notebooks/4nodes.py')
